generator client {
  provider = "prisma-client-py"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model ApiKey {
  id         String       @id
  key        String       @unique
  enabled    Boolean      @default(true)
  userId     String
  User       User         @relation(fields: [userId], references: [id])
  ApiRequest ApiRequest[]

  @@unique([userId, key, enabled])
}

model ApiRequest {
  id         String   @id
  timestamp  DateTime @default(now())
  method     String
  path       String
  status     Int
  duration   Int
  usedApiKey String
  apiKeyId   String
  ApiKey     ApiKey   @relation(fields: [apiKeyId], references: [id])

  @@index([apiKeyId, timestamp])
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  apiKeyId      String?
  image         String?
  Account       Account[]
  ApiKey        ApiKey[]
  Session       Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
